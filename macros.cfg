[gcode_macro SET_PAUSE_AT_LAYER]
description: "Enable/disable a pause if a given layer number is reached"
variable_LAYER: 0
gcode:
    {% set pause_at_layer = printer['gcode_macro SET_PRINT_STATS_INFO'].pause_at_layer %}
    {% set ENABLE = params.ENABLE|default(1)|int != 0 %}
    {% set LAYER = params.LAYER|default(pause_at_layer.layer)|int %}
    {% set MACRO = params.MACRO|default(pause_at_layer.call, True) %}
    SET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_at_layer VALUE="{{ 'enable': ENABLE, 'layer': LAYER, 'call': MACRO }}"

[gcode_macro PID_EXTRUDER]
description: PID Tune for the Extruder
gcode:
   M106 S179
  {% set e = printer.toolhead.extruder %}
  {% set T = params.TEMPERATURE|default(210)|float %}
  {% set S = params.FAN_IN_PERCENT|default(0)|float *2.55 %}
  {% set P = printer.configfile.config[e].pid_kp|float %}
  {% set I = printer.configfile.config[e].pid_ki|float %}
  {% set D = printer.configfile.config[e].pid_kd|float %}
  M106 S{S}
  M118 // PID parameters: pid_Kp={P} pid_Ki={I} pid_Kd={D}  (old)
  PID_CALIBRATE HEATER={e} TARGET={T}
  TURN_OFF_HEATERS
  SAVE_CONFIG

[gcode_macro PID_BED]
description: PID Tune for the Bed
gcode:
  {% set T = params.TEMPERATURE|default(60)|float %}
  {% set P = printer.configfile.config['heater_bed'].pid_kp|float %}
  {% set I = printer.configfile.config['heater_bed'].pid_ki|float %}
  {% set D = printer.configfile.config['heater_bed'].pid_kd|float %}
  M118 // PID parameters: pid_Kp={P} pid_Ki={I} pid_Kd={D}  (old)
  PID_CALIBRATE HEATER=heater_bed TARGET={T}
  TURN_OFF_HEATERS
  SAVE_CONFIG

[gcode_macro _CLIENT_EXTRUDE]
description: Extrudes, if the extruder is hot enough
gcode:
  ##### get user parameters or use default #####
  {% set client = printer['gcode_macro _CLIENT_VARIABLE'] | default({}) %}
  {% set use_fw_retract = (client.use_fw_retract | default(false) | lower == 'true') and (printer.firmware_retraction is defined) %}
  {% set length = params.LENGTH | default(client.unretract) | default(1.0) | float %}
  {% set speed = params.SPEED | default(client.speed_unretract) | default(35) %}
  {% set absolute_extrude = printer.gcode_move.absolute_extrude %}
  ##### end of definitions #####
  {% if printer.toolhead.extruder != '' %}
    {% if printer[printer.toolhead.extruder].can_extrude %}
      {% if use_fw_retract %}
        {% if length < 0 %}
          G10
        {% else %}
          G11
        {% endif %}
      {% else %}
        M83
        G1 E{length} F{(speed | float | abs) * 60}
        {% if absolute_extrude %}
          M82
        {% endif %}
      {% endif %}
    {% else %}
      RESPOND TYPE=echo MSG='{"\"%s\" not hot enough" % printer.toolhead.extruder}'
    {% endif %}
  {% endif %}

[gcode_macro _CLIENT_RETRACT]
description: Retracts, if the extruder is hot enough
gcode:
  {% set client = printer['gcode_macro _CLIENT_VARIABLE'] | default({}) %}
  {% set length = params.LENGTH | default(client.retract) | default(1.0) | float %}
  {% set speed = params.SPEED | default(client.speed_retract) | default(35) %}

  _CLIENT_EXTRUDE LENGTH=-{length | float | abs} SPEED={speed | float | abs}

[gcode_macro ZPROBE_CALIBRATE]
description: Calibrate Z Offset and Save
gcode:
  G28
  PROBE_CALIBRATE
  